{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\pages\\\\role\\\\role.jsx\";\nimport React, { Component } from 'react';\nimport { PAGE_SIZE } from \"../../utils/constants\";\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api';\nimport AddForm from './add-form';\nimport AuthForm from './auth-form';\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport { formateDate } from '../../utils/dateUtils';\nimport storageUtils from \"../../utils/storageUtils\";\n/*\n角色路由\n */\n\nexport default class Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      // 所有角色的列表\n      role: {},\n      // 选中的role\n      isShowAdd: false,\n      // 是否显示添加界面\n      isShowAuth: false // 是否显示设置权限界面\n\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        render: create_time => formateDate(create_time)\n      }, {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        render: formateDate\n      }, {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      }];\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      return {\n        onClick: event => {\n          // 点击行\n          console.log('row onClick()', role); // alert('点击行')\n\n          this.setState({\n            role\n          });\n        }\n      };\n    };\n\n    this.addRole = () => {\n      // 进行表单验证, 只能通过了才向下处理\n      this.form.validateFields(async (error, values) => {\n        if (!error) {\n          // 隐藏确认框\n          this.setState({\n            isShowAdd: false\n          }); // 收集输入数据\n\n          const {\n            roleName\n          } = values;\n          this.form.resetFields(); // 请求添加\n\n          const result = await reqAddRole(roleName); // 根据结果提示/更新列表显示\n\n          if (result.status === 0) {\n            _message.success('添加角色成功'); // this.getRoles()\n            // 新产生的角色\n\n\n            const role = result.data; // 更新roles状态\n\n            /*const roles = this.state.roles\n            roles.push(role)\n            this.setState({\n              roles\n            })*/\n            // 更新roles状态: 基于原本状态数据更新\n\n            this.setState(state => ({\n              roles: [...state.roles, role]\n            }));\n          } else {\n            _message.success('添加角色失败');\n          }\n        }\n      });\n    };\n\n    this.updateRole = async () => {\n      // 隐藏确认框\n      this.setState({\n        isShowAuth: false\n      });\n      const role = this.state.role; // 得到最新的menus\n\n      const menus = this.auth.current.getMenus();\n      role.menus = menus;\n      role.auth_time = Date.now();\n      role.auth_name = memoryUtils.user.username; // 请求更新\n\n      const result = await reqUpdateRole(role);\n\n      if (result.status === 0) {\n        // this.getRoles()\n        // 如果当前更新的是自己角色的权限, 强制退出\n        if (role._id === memoryUtils.user.role_id) {\n          memoryUtils.user = {};\n          storageUtils.removeUser();\n          this.props.history.replace('/login');\n\n          _message.success('当前用户角色权限成功');\n        } else {\n          _message.success('设置角色权限成功');\n\n          this.setState({\n            roles: [...this.state.roles]\n          });\n        }\n      }\n    };\n\n    this.auth = React.createRef();\n  }\n\n  componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    this.getRoles();\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => this.setState({\n        isShowAdd: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, \"\\u521B\\u5EFA\\u89D2\\u8272\"), \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      disabled: !role._id,\n      onClick: () => this.setState({\n        isShowAuth: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"));\n    return /*#__PURE__*/React.createElement(_Card, {\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      dataSource: roles,\n      columns: this.columns,\n      pagination: {\n        defaultPageSize: PAGE_SIZE\n      },\n      rowSelection: {\n        type: 'radio',\n        selectedRowKeys: [role._id],\n        onSelect: role => {\n          // 选择某个radio时回调\n          this.setState({\n            role\n          });\n        }\n      },\n      onRow: this.onRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n      visible: isShowAdd,\n      onOk: this.addRole,\n      onCancel: () => {\n        this.setState({\n          isShowAdd: false\n        });\n        this.form.resetFields();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddForm, {\n      setForm: form => this.form = form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",\n      visible: isShowAuth,\n      onOk: this.updateRole,\n      onCancel: () => {\n        this.setState({\n          isShowAuth: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AuthForm, {\n      ref: this.auth,\n      role: role,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/pages/role/role.jsx"],"names":["React","Component","PAGE_SIZE","reqRoles","reqAddRole","reqUpdateRole","AddForm","AuthForm","memoryUtils","formateDate","storageUtils","Role","constructor","props","state","roles","role","isShowAdd","isShowAuth","initColumn","columns","title","dataIndex","render","create_time","getRoles","result","status","data","setState","onRow","onClick","event","console","log","addRole","form","validateFields","error","values","roleName","resetFields","success","updateRole","menus","auth","current","getMenus","auth_time","Date","now","auth_name","user","username","_id","role_id","removeUser","history","replace","createRef","componentWillMount","componentDidMount","defaultPageSize","type","selectedRowKeys","onSelect"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  Card,\n  Button,\n  Table,\n  Modal,\n  message\n} from 'antd'\nimport {PAGE_SIZE} from \"../../utils/constants\"\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\nimport AddForm from './add-form'\nimport AuthForm from './auth-form'\nimport memoryUtils from \"../../utils/memoryUtils\"\nimport {formateDate} from '../../utils/dateUtils'\nimport storageUtils from \"../../utils/storageUtils\";\n\n/*\n角色路由\n */\nexport default class Role extends Component {\n\n  state = {\n    roles: [], // 所有角色的列表\n    role: {}, // 选中的role\n    isShowAdd: false, // 是否显示添加界面\n    isShowAuth: false, // 是否显示设置权限界面\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.auth = React.createRef()\n  }\n\n  initColumn = () => {\n    this.columns = [\n      {\n        title: '角色名称',\n        dataIndex: 'name'\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        render: (create_time) => formateDate(create_time)\n      },\n      {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        render: formateDate\n      },\n      {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      },\n    ]\n  }\n\n  getRoles = async () => {\n    const result = await reqRoles()\n    if (result.status===0) {\n      const roles = result.data\n      this.setState({\n        roles\n      })\n    }\n  }\n\n\n  onRow = (role) => {\n    return {\n      onClick: event => { // 点击行\n        console.log('row onClick()', role)\n        // alert('点击行')\n        this.setState({\n          role\n        })\n      },\n    }\n  }\n\n  /*\n  添加角色\n   */\n  addRole = () => {\n    // 进行表单验证, 只能通过了才向下处理\n    this.form.validateFields(async (error, values) => {\n      if (!error) {\n\n        // 隐藏确认框\n        this.setState({\n          isShowAdd: false\n        })\n\n        // 收集输入数据\n        const {roleName} = values\n        this.form.resetFields()\n\n        // 请求添加\n        const result = await reqAddRole(roleName)\n        // 根据结果提示/更新列表显示\n        if (result.status===0) {\n          message.success('添加角色成功')\n          // this.getRoles()\n          // 新产生的角色\n          const role = result.data\n          // 更新roles状态\n          /*const roles = this.state.roles\n          roles.push(role)\n          this.setState({\n            roles\n          })*/\n\n          // 更新roles状态: 基于原本状态数据更新\n          this.setState(state => ({\n            roles: [...state.roles, role]\n          }))\n\n        } else {\n          message.success('添加角色失败')\n        }\n\n      }\n    })\n\n\n  }\n\n  /*\n  更新角色\n   */\n  updateRole = async () => {\n\n    // 隐藏确认框\n    this.setState({\n      isShowAuth: false\n    })\n\n    const role = this.state.role\n    // 得到最新的menus\n    const menus = this.auth.current.getMenus()\n    role.menus = menus\n    role.auth_time = Date.now()\n    role.auth_name = memoryUtils.user.username\n\n    // 请求更新\n    const result = await reqUpdateRole(role)\n    if (result.status===0) {\n      // this.getRoles()\n      // 如果当前更新的是自己角色的权限, 强制退出\n      if (role._id === memoryUtils.user.role_id) {\n        memoryUtils.user = {}\n        storageUtils.removeUser()\n        this.props.history.replace('/login')\n        message.success('当前用户角色权限成功')\n      } else {\n        message.success('设置角色权限成功')\n        this.setState({\n          roles: [...this.state.roles]\n        })\n      }\n\n    }\n  }\n\n  componentWillMount () {\n    this.initColumn()\n  }\n\n  componentDidMount () {\n    this.getRoles()\n  }\n\n  render() {\n\n    const {roles, role, isShowAdd, isShowAuth} = this.state\n\n    const title = (\n      <span>\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\n      </span>\n    )\n\n    return (\n      <Card title={title}>\n        <Table\n          bordered\n          rowKey='_id'\n          dataSource={roles}\n          columns={this.columns}\n          pagination={{defaultPageSize: PAGE_SIZE}}\n          rowSelection={{\n            type: 'radio',\n            selectedRowKeys: [role._id],\n            onSelect: (role) => { // 选择某个radio时回调\n              this.setState({\n                role\n              })\n            }\n\n          }}\n          onRow={this.onRow}\n        />\n\n        <Modal\n          title=\"添加角色\"\n          visible={isShowAdd}\n          onOk={this.addRole}\n          onCancel={() => {\n            this.setState({isShowAdd: false})\n            this.form.resetFields()\n          }}\n        >\n          <AddForm\n            setForm={(form) => this.form = form}\n          />\n        </Modal>\n\n        <Modal\n          title=\"设置角色权限\"\n          visible={isShowAuth}\n          onOk={this.updateRole}\n          onCancel={() => {\n            this.setState({isShowAuth: false})\n          }}\n        >\n          <AuthForm ref={this.auth} role={role}/>\n        </Modal>\n      </Card>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}