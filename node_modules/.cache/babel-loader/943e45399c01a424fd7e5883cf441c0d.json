{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\pages\\\\category\\\\category.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button';\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api';\nimport AddForm from './add-form';\nimport UpdateForm from './update-form';\n/*\n商品分类路由\n */\n\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      // 是否正在获取数据中\n      categorys: [],\n      // 一级分类列表\n      subCategorys: [],\n      // 二级分类列表\n      parentId: '0',\n      // 当前需要显示的分类列表的父分类ID\n      parentName: '',\n      // 当前需要显示的分类列表的父分类名称\n      showStatus: 0 // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\n\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '分类的名称',\n        dataIndex: 'name' // 显示数据对应的属性名\n\n      }, {\n        title: '操作',\n        width: 300,\n        render: category =>\n        /*#__PURE__*/\n        // 返回需要显示的界面标签\n        React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(LinkButton, {\n          onClick: () => this.showUpdate(category),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, \"\\u4FEE\\u6539\\u5206\\u7C7B\"), this.state.parentId === '0' ? /*#__PURE__*/React.createElement(LinkButton, {\n          onClick: () => this.showSubCategorys(category),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 42\n          }\n        }, \"\\u67E5\\u770B\\u5B50\\u5206\\u7C7B\") : null)\n      }];\n    };\n\n    this.getCategorys = async parentId => {\n      // 在发请求前, 显示loading\n      this.setState({\n        loading: true\n      });\n      parentId = parentId || this.state.parentId; // 发异步ajax请求, 获取数据\n\n      const result = await reqCategorys(parentId); // 在请求完成后, 隐藏loading\n\n      this.setState({\n        loading: false\n      });\n\n      if (result.status === 0) {\n        // 取出分类数组(可能是一级也可能二级的)\n        const categorys = result.data;\n\n        if (parentId === '0') {\n          // 更新一级分类状态\n          this.setState({\n            categorys\n          });\n          console.log('----', this.state.categorys.length);\n        } else {\n          // 更新二级分类状态\n          this.setState({\n            subCategorys: categorys\n          });\n        }\n      } else {\n        _message.error('获取分类列表失败');\n      }\n    };\n\n    this.showSubCategorys = category => {\n      // 更新状态\n      this.setState({\n        parentId: category._id,\n        parentName: category.name\n      }, () => {\n        // 在状态更新且重新render()后执行\n        console.log('parentId', this.state.parentId); // '0'\n        // 获取二级分类列表显示\n\n        this.getCategorys();\n      }); // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\n      // console.log('parentId', this.state.parentId) // '0'\n    };\n\n    this.showCategorys = () => {\n      // 更新为显示一列表的状态\n      this.setState({\n        parentId: '0',\n        parentName: '',\n        subCategorys: []\n      });\n    };\n\n    this.handleCancel = () => {\n      // 清除输入数据\n      this.form.resetFields(); // 隐藏确认框\n\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.showAdd = () => {\n      this.setState({\n        showStatus: 1\n      });\n    };\n\n    this.addCategory = () => {\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          // 隐藏确认框\n          this.setState({\n            showStatus: 0\n          }); // 收集数据, 并提交添加分类的请求\n\n          const {\n            parentId,\n            categoryName\n          } = values; // 清除输入数据\n\n          this.form.resetFields();\n          const result = await reqAddCategory(categoryName, parentId);\n\n          if (result.status === 0) {\n            // 添加的分类就是当前分类列表下的分类\n            if (parentId === this.state.parentId) {\n              // 重新获取当前分类列表显示\n              this.getCategorys();\n            } else if (parentId === '0') {\n              // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\n              this.getCategorys('0');\n            }\n          }\n        }\n      });\n    };\n\n    this.showUpdate = category => {\n      // 保存分类对象\n      this.category = category; // 更新状态\n\n      this.setState({\n        showStatus: 2\n      });\n    };\n\n    this.updateCategory = () => {\n      console.log('updateCategory()'); // 进行表单验证, 只有通过了才处理\n\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          // 1. 隐藏确定框\n          this.setState({\n            showStatus: 0\n          }); // 准备数据\n\n          const categoryId = this.category._id;\n          const {\n            categoryName\n          } = values; // 清除输入数据\n\n          this.form.resetFields(); // 2. 发请求更新分类\n\n          const result = await reqUpdateCategory({\n            categoryId,\n            categoryName\n          });\n\n          if (result.status === 0) {\n            // 3. 重新显示列表\n            this.getCategorys();\n          }\n        }\n      });\n    };\n  }\n\n  /*\n  为第一次render()准备数据\n   */\n  componentWillMount() {\n    this.initColumns();\n  }\n  /*\n  执行异步任务: 发异步ajax请求\n   */\n\n\n  componentDidMount() {\n    // 获取一级分类列表显示\n    this.getCategorys();\n  }\n\n  render() {\n    // 读取状态数据\n    const {\n      categorys,\n      subCategorys,\n      parentId,\n      parentName,\n      loading,\n      showStatus\n    } = this.state; // 读取指定的分类\n\n    const category = this.category || {}; // 如果还没有指定一个空对象\n    // card的左侧\n\n    const title = parentId === '0' ? '一级分类列表' : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LinkButton, {\n      onClick: this.showCategorys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, \"\\u4E00\\u7EA7\\u5206\\u7C7B\\u5217\\u8868\"), /*#__PURE__*/React.createElement(_Icon, {\n      type: \"arrow-right\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, parentName)); // Card的右侧\n\n    const extra = /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }), \"\\u6DFB\\u52A0\");\n    return /*#__PURE__*/React.createElement(_Card, {\n      title: title,\n      extra: extra,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      style: {\n        backgroundColor: 'pink'\n      },\n      bordered: true,\n      rowKey: \"_id\",\n      loading: loading,\n      dataSource: parentId === '0' ? categorys : subCategorys,\n      columns: this.columns,\n      pagination: {\n        defaultPageSize: 5,\n        showQuickJumper: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u5206\\u7C7B\",\n      visible: showStatus === 1,\n      onOk: this.addCategory,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddForm, {\n      categorys: categorys,\n      parentId: parentId,\n      setForm: form => {\n        this.form = form;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u66F4\\u65B0\\u5206\\u7C7B\",\n      visible: showStatus === 2,\n      onOk: this.updateCategory,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UpdateForm, {\n      categoryName: category.name,\n      setForm: form => {\n        this.form = form;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/pages/category/category.jsx"],"names":["React","Component","LinkButton","reqCategorys","reqUpdateCategory","reqAddCategory","AddForm","UpdateForm","Category","state","loading","categorys","subCategorys","parentId","parentName","showStatus","initColumns","columns","title","dataIndex","width","render","category","showUpdate","showSubCategorys","getCategorys","setState","result","status","data","console","log","length","error","_id","name","showCategorys","handleCancel","form","resetFields","showAdd","addCategory","validateFields","err","values","categoryName","updateCategory","categoryId","componentWillMount","componentDidMount","marginRight","extra","backgroundColor","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  Card,\n  Table,\n  Button,\n  Icon,\n  message,\n  Modal\n} from 'antd'\n\nimport LinkButton from '../../components/link-button'\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\nimport AddForm from './add-form'\nimport UpdateForm from './update-form'\n\n/*\n商品分类路由\n */\nexport default class Category extends Component {\n\n  state = {\n    loading: false, // 是否正在获取数据中\n    categorys: [], // 一级分类列表\n    subCategorys: [], // 二级分类列表\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\n    parentName: '', // 当前需要显示的分类列表的父分类名称\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\n  }\n\n  /*\n  初始化Table所有列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '分类的名称',\n        dataIndex: 'name', // 显示数据对应的属性名\n      },\n      {\n        title: '操作',\n        width: 300,\n        render: (category) => ( // 返回需要显示的界面标签\n          <span>\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\n\n          </span>\n        )\n      }\n    ]\n  }\n\n\n  /*\n  异步获取一级/二级分类列表显示\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\n   */\n  getCategorys = async (parentId) => {\n\n    // 在发请求前, 显示loading\n    this.setState({loading: true})\n    parentId = parentId || this.state.parentId\n    // 发异步ajax请求, 获取数据\n    const result = await reqCategorys(parentId)\n    // 在请求完成后, 隐藏loading\n    this.setState({loading: false})\n\n    if(result.status===0) {\n      // 取出分类数组(可能是一级也可能二级的)\n      const categorys = result.data\n      if(parentId==='0') {\n        // 更新一级分类状态\n        this.setState({\n          categorys\n        })\n        console.log('----', this.state.categorys.length)\n      } else {\n        // 更新二级分类状态\n        this.setState({\n          subCategorys: categorys\n        })\n      }\n    } else {\n      message.error('获取分类列表失败')\n    }\n  }\n\n  /*\n  显示指定一级分类对象的二子列表\n   */\n  showSubCategorys = (category) => {\n    // 更新状态\n    this.setState({\n      parentId: category._id,\n      parentName: category.name\n    }, () => { // 在状态更新且重新render()后执行\n      console.log('parentId', this.state.parentId) // '0'\n      // 获取二级分类列表显示\n      this.getCategorys()\n    })\n\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\n    // console.log('parentId', this.state.parentId) // '0'\n  }\n\n  /*\n  显示指定一级分类列表\n   */\n  showCategorys = () => {\n    // 更新为显示一列表的状态\n    this.setState({\n      parentId: '0',\n      parentName: '',\n      subCategorys: []\n    })\n  }\n\n  /*\n  响应点击取消: 隐藏确定框\n   */\n  handleCancel = () => {\n    // 清除输入数据\n    this.form.resetFields()\n    // 隐藏确认框\n    this.setState({\n      showStatus: 0\n    })\n  }\n\n  /*\n  显示添加的确认框\n   */\n  showAdd = () => {\n    this.setState({\n      showStatus: 1\n    })\n  }\n\n  /*\n  添加分类\n   */\n  addCategory = () => {\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        // 隐藏确认框\n        this.setState({\n          showStatus: 0\n        })\n\n        // 收集数据, 并提交添加分类的请求\n        const {parentId, categoryName} = values\n        // 清除输入数据\n        this.form.resetFields()\n        const result = await reqAddCategory(categoryName, parentId)\n        if(result.status===0) {\n\n          // 添加的分类就是当前分类列表下的分类\n          if(parentId===this.state.parentId) {\n            // 重新获取当前分类列表显示\n            this.getCategorys()\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\n            this.getCategorys('0')\n          }\n        }\n      }\n    })\n  }\n\n\n  /*\n  显示修改的确认框\n   */\n  showUpdate = (category) => {\n    // 保存分类对象\n    this.category = category\n    // 更新状态\n    this.setState({\n      showStatus: 2\n    })\n  }\n\n  /*\n  更新分类\n   */\n  updateCategory = () => {\n    console.log('updateCategory()')\n    // 进行表单验证, 只有通过了才处理\n    this.form.validateFields(async (err, values) => {\n      if(!err) {\n        // 1. 隐藏确定框\n        this.setState({\n          showStatus: 0\n        })\n\n        // 准备数据\n        const categoryId = this.category._id\n        const {categoryName} = values\n        // 清除输入数据\n        this.form.resetFields()\n\n        // 2. 发请求更新分类\n        const result = await reqUpdateCategory({categoryId, categoryName})\n        if (result.status===0) {\n          // 3. 重新显示列表\n          this.getCategorys()\n        }\n      }\n    })\n\n\n  }\n\n\n\n  /*\n  为第一次render()准备数据\n   */\n  componentWillMount () {\n    this.initColumns()\n  }\n\n  /*\n  执行异步任务: 发异步ajax请求\n   */\n  componentDidMount () {\n    // 获取一级分类列表显示\n    this.getCategorys()\n  }\n\n  render() {\n\n    // 读取状态数据\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\n    // 读取指定的分类\n    const category = this.category || {} // 如果还没有指定一个空对象\n\n    // card的左侧\n    const title = parentId === '0' ? '一级分类列表' : (\n      <span>\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\n        <span>{parentName}</span>\n      </span>\n    )\n    // Card的右侧\n    const extra = (\n      <Button type='primary' onClick={this.showAdd}>\n        <Icon type='plus'/>\n        添加\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra} >\n        <Table style={{backgroundColor:'pink'}}\n          bordered\n          rowKey='_id'\n          loading={loading}\n          dataSource={parentId==='0' ? categorys : subCategorys}\n          columns={this.columns}\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\n        />\n\n        <Modal\n          title=\"添加分类\"\n          visible={showStatus===1}\n          onOk={this.addCategory}\n          onCancel={this.handleCancel}\n        >\n          <AddForm\n            categorys={categorys}\n            parentId={parentId}\n            setForm={(form) => {this.form = form}}\n          />\n        </Modal>\n\n        <Modal\n          title=\"更新分类\"\n          visible={showStatus===2}\n          onOk={this.updateCategory}\n          onCancel={this.handleCancel}\n        >\n          <UpdateForm\n            categoryName={category.name}\n            setForm={(form) => {this.form = form}}\n          />\n        </Modal>\n      </Card>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}