{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\components\\\\left-nav\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport logo from '../../assets/images/logo.pagination';\nimport menuList from '../../config/menuConfig';\nimport './index.less';\nimport memoryUtils from \"../../utils/memoryUtils\";\nconst SubMenu = _Menu.SubMenu;\n/*\n左侧导航的组件\n */\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.hasAuth = item => {\n      const {\n        key,\n        isPublic\n      } = item;\n      const menus = memoryUtils.user.role.menus;\n      const username = memoryUtils.user.username;\n      /*\n      1. 如果当前用户是admin\n      2. 如果当前item是公开的\n      3. 当前用户有此item的权限: key有没有menus中\n       */\n\n      if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\n        return true;\n      } else if (item.children) {\n        // 4. 如果当前用户有此item的某个子item的权限\n        return !!item.children.find(child => menus.indexOf(child.key) !== -1);\n      }\n\n      return false;\n    };\n\n    this.getMenuNodes_map = menuList => {\n      return menuList.map(item => {\n        /*\n          {\n            title: '首页', // 菜单标题名称\n            key: '/home', // 对应的path\n            icon: 'home', // 图标名称\n            children: [], // 可能有, 也可能没有\n          }\n           <Menu.Item key=\"/home\">\n            <Link to='/home'>\n              <Icon type=\"pie-chart\"/>\n              <span>首页</span>\n            </Link>\n          </Menu.Item>\n           <SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <Icon type=\"mail\"/>\n                <span>商品</span>\n              </span>\n            }\n          >\n            <Menu.Item/>\n            <Menu.Item/>\n          </SubMenu>\n        */\n        if (!item.children) {\n          return /*#__PURE__*/React.createElement(_Menu.Item, {\n            key: item.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: item.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(_Icon, {\n            type: item.icon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }\n          }, item.title)));\n        } else {\n          return /*#__PURE__*/React.createElement(SubMenu, {\n            key: item.key,\n            title: /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(_Icon, {\n              type: item.icon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }\n            }, item.title)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }\n          }, this.getMenuNodes(item.children));\n        }\n      });\n    };\n\n    this.getMenuNodes = menuList => {\n      // 得到当前请求的路由路径\n      const path = this.props.location.pathname;\n      return menuList.reduce((pre, item) => {\n        // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\n        if (this.hasAuth(item)) {\n          // 向pre添加<Menu.Item>\n          if (!item.children) {\n            pre.push( /*#__PURE__*/React.createElement(_Menu.Item, {\n              key: item.key,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: item.key,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(_Icon, {\n              type: item.icon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }\n            }, item.title))));\n          } else {\n            // 查找一个与当前请求路径匹配的子Item\n            const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0); // 如果存在, 说明当前item的子列表需要打开\n\n            if (cItem) {\n              this.openKey = item.key;\n            } // 向pre添加<SubMenu>\n\n\n            pre.push( /*#__PURE__*/React.createElement(SubMenu, {\n              key: item.key,\n              title: /*#__PURE__*/React.createElement(\"span\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(_Icon, {\n                type: item.icon,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 15\n                }\n              }, item.title)),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }\n            }, this.getMenuNodes(item.children)));\n          }\n        }\n\n        return pre;\n      }, []);\n    };\n  }\n\n  /*\n  在第一次render()之前执行一次\n  为第一个render()准备数据(必须同步的)\n   */\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  render() {\n    // debugger\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname;\n    console.log('render()', path);\n\n    if (path.indexOf('/product') === 0) {\n      // 当前请求的是商品或其子路由界面\n      path = '/product';\n    } // 得到需要打开菜单项的key\n\n\n    const openKey = this.openKey;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"left-nav-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"\\u540E\\u53F0\\u7BA1\\u7406\")), /*#__PURE__*/React.createElement(_Menu, {\n      mode: \"inline\",\n      theme: \"dark\",\n      selectedKeys: [path],\n      defaultOpenKeys: [openKey],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, this.menuNodes));\n  }\n\n}\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\n\n\nexport default withRouter(LeftNav);","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/components/left-nav/index.jsx"],"names":["React","Component","Link","withRouter","logo","menuList","memoryUtils","SubMenu","LeftNav","hasAuth","item","key","isPublic","menus","user","role","username","indexOf","children","find","child","getMenuNodes_map","map","icon","title","getMenuNodes","path","props","location","pathname","reduce","pre","push","cItem","openKey","componentWillMount","menuNodes","render","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {Menu, Icon} from 'antd';\n\nimport logo from '../../assets/images/logo.pagination'\nimport menuList from '../../config/menuConfig'\nimport './index.less'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\nconst SubMenu = Menu.SubMenu;\n\n/*\n左侧导航的组件\n */\nclass LeftNav extends Component {\n\n  /*\n  判断当前登陆用户对item是否有权限\n   */\n  hasAuth = (item) => {\n    const {key, isPublic} = item\n\n    const menus = memoryUtils.user.role.menus\n    const username = memoryUtils.user.username\n    /*\n    1. 如果当前用户是admin\n    2. 如果当前item是公开的\n    3. 当前用户有此item的权限: key有没有menus中\n     */\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\n      return true\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\n    }\n\n    return false\n  }\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用map() + 递归调用\n  */\n  getMenuNodes_map = (menuList) => {\n    return menuList.map(item => {\n      /*\n        {\n          title: '首页', // 菜单标题名称\n          key: '/home', // 对应的path\n          icon: 'home', // 图标名称\n          children: [], // 可能有, 也可能没有\n        }\n\n        <Menu.Item key=\"/home\">\n          <Link to='/home'>\n            <Icon type=\"pie-chart\"/>\n            <span>首页</span>\n          </Link>\n        </Menu.Item>\n\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <Icon type=\"mail\"/>\n              <span>商品</span>\n            </span>\n          }\n        >\n          <Menu.Item/>\n          <Menu.Item/>\n        </SubMenu>\n      */\n      if(!item.children) {\n        return (\n          <Menu.Item key={item.key}>\n            <Link to={item.key}>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </Link>\n          </Menu.Item>\n        )\n      } else {\n        return (\n          <SubMenu\n            key={item.key}\n            title={\n              <span>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </span>\n            }\n          >\n            {this.getMenuNodes(item.children)}\n          </SubMenu>\n        )\n      }\n\n    })\n  }\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用reduce() + 递归调用\n  */\n  getMenuNodes = (menuList) => {\n    // 得到当前请求的路由路径\n    const path = this.props.location.pathname\n\n    return menuList.reduce((pre, item) => {\n\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\n      if (this.hasAuth(item)) {\n        // 向pre添加<Menu.Item>\n        if(!item.children) {\n          pre.push((\n            <Menu.Item key={item.key}>\n              <Link to={item.key}>\n                <Icon type={item.icon}/>\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          ))\n        } else {\n\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key\n          }\n\n\n          // 向pre添加<SubMenu>\n          pre.push((\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </span>\n              }\n            >\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          ))\n        }\n      }\n\n      return pre\n    }, [])\n  }\n\n  /*\n  在第一次render()之前执行一次\n  为第一个render()准备数据(必须同步的)\n   */\n  componentWillMount () {\n    this.menuNodes = this.getMenuNodes(menuList)\n  }\n\n  render() {\n    // debugger\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname\n    console.log('render()', path)\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\n      path = '/product'\n    }\n\n    // 得到需要打开菜单项的key\n    const openKey = this.openKey\n\n    return (\n      <div className=\"left-nav\">\n        <Link to='/' className=\"left-nav-header\">\n          <img src={logo} alt=\"logo\"/>\n          <h1>后台管理</h1>\n        </Link>\n\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          selectedKeys={[path]}\n          defaultOpenKeys={[openKey]}\n        >\n\n          {\n            this.menuNodes\n          }\n\n        </Menu>\n      </div>\n    )\n  }\n}\n\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\nexport default withRouter(LeftNav)"]},"metadata":{},"sourceType":"module"}