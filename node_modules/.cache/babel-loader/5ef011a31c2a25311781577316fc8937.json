{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\pages\\\\category\\\\add-form.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst Item = _Form.Item;\nconst Option = _Select.Option;\n/*\n添加分类的form组件\n */\n\nclass AddForm extends Component {\n  componentWillMount() {\n    this.props.setForm(this.props.form);\n  }\n\n  render() {\n    const {\n      categorys,\n      parentId\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(_Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, getFieldDecorator('parentId', {\n      initialValue: parentId\n    })( /*#__PURE__*/React.createElement(_Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"\\u4E00\\u7EA7\\u5206\\u7C7B\"), categorys.map(c => /*#__PURE__*/React.createElement(Option, {\n      value: c._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 38\n      }\n    }, c.name))))), /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, getFieldDecorator('categoryName', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: '分类名称必须输入'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5206\\u7C7B\\u540D\\u79F0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nAddForm.propTypes = {\n  setForm: PropTypes.func.isRequired,\n  // 用来传递form对象的函数\n  categorys: PropTypes.array.isRequired,\n  // 一级分类的数组\n  parentId: PropTypes.string.isRequired // 父分类的ID\n\n};\nexport default _Form.create()(AddForm);","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/pages/category/add-form.jsx"],"names":["React","Component","PropTypes","Item","Option","AddForm","componentWillMount","props","setForm","form","render","categorys","parentId","getFieldDecorator","initialValue","map","c","_id","name","rules","required","message","propTypes","func","isRequired","array","string","create"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAOA,MAAMC,IAAI,GAAG,MAAKA,IAAlB;AACA,MAAMC,MAAM,GAAG,QAAOA,MAAtB;AAEA;AACA;AACA;;AACA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAQ9BK,EAAAA,kBAAkB,GAAI;AACpB,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,IAA9B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAwB,KAAKL,KAAnC;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAwB,KAAKN,KAAL,CAAWE,IAAzC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEII,iBAAiB,CAAC,UAAD,EAAa;AAC5BC,MAAAA,YAAY,EAAEF;AADc,KAAb,CAAjB,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAGID,SAAS,CAACI,GAAV,CAAcC,CAAC,iBAAI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,CAAC,CAACE,IAAzB,CAAnB,CAHJ,CAHF,CAFJ,CADF,eAiBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIL,iBAAiB,CAAC,cAAD,EAAiB;AAChCC,MAAAA,YAAY,EAAE,EADkB;AAEhCK,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OADK;AAFyB,KAAjB,CAAjB,eAME;AAAO,MAAA,WAAW,EAAC,4CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFJ,CAjBF,CADF;AAgCD;;AAhD6B;;AAA1BhB,O,CAEGiB,S,GAAY;AACjBd,EAAAA,OAAO,EAAEN,SAAS,CAACqB,IAAV,CAAeC,UADP;AACmB;AACpCb,EAAAA,SAAS,EAAET,SAAS,CAACuB,KAAV,CAAgBD,UAFV;AAEsB;AACvCZ,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,MAAV,CAAiBF,UAHV,CAGsB;;AAHtB,C;AAiDrB,eAAe,MAAKG,MAAL,GAActB,OAAd,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Form,\n  Select,\n  Input\n} from 'antd'\n\nconst Item = Form.Item\nconst Option = Select.Option\n\n/*\n添加分类的form组件\n */\nclass AddForm extends Component {\n\n  static propTypes = {\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\n    parentId: PropTypes.string.isRequired, // 父分类的ID\n  }\n\n  componentWillMount () {\n    this.props.setForm(this.props.form)\n  }\n\n  render() {\n    const {categorys, parentId} = this.props\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form>\n        <Item>\n          {\n            getFieldDecorator('parentId', {\n              initialValue: parentId\n            })(\n              <Select>\n                <Option value='0'>一级分类</Option>\n                {\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\n                }\n              </Select>\n            )\n          }\n\n        </Item>\n\n        <Item>\n          {\n            getFieldDecorator('categoryName', {\n              initialValue: '',\n              rules: [\n                {required: true, message: '分类名称必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入分类名称'/>\n            )\n          }\n        </Item>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(AddForm)"]},"metadata":{},"sourceType":"module"}