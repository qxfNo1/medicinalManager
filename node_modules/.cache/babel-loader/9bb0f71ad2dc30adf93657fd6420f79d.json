{"ast":null,"code":"/*!@license\n * UAParser.js v0.7.28\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright Â© 2012-2021 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n(function (window, undefined) {\n  'use strict'; //////////////\n  // Constants\n  /////////////\n\n  var LIBVERSION = '0.7.28',\n      EMPTY = '',\n      UNKNOWN = '?',\n      FUNC_TYPE = 'function',\n      UNDEF_TYPE = 'undefined',\n      OBJ_TYPE = 'object',\n      STR_TYPE = 'string',\n      MAJOR = 'major',\n      // deprecated\n  MODEL = 'model',\n      NAME = 'name',\n      TYPE = 'type',\n      VENDOR = 'vendor',\n      VERSION = 'version',\n      ARCHITECTURE = 'architecture',\n      CONSOLE = 'console',\n      MOBILE = 'mobile',\n      TABLET = 'tablet',\n      SMARTTV = 'smarttv',\n      WEARABLE = 'wearable',\n      EMBEDDED = 'embedded',\n      UA_MAX_LENGTH = 255; ///////////\n  // Helper\n  //////////\n\n  var util = {\n    extend: function (regexes, extensions) {\n      var mergedRegexes = {};\n\n      for (var i in regexes) {\n        if (extensions[i] && extensions[i].length % 2 === 0) {\n          mergedRegexes[i] = extensions[i].concat(regexes[i]);\n        } else {\n          mergedRegexes[i] = regexes[i];\n        }\n      }\n\n      return mergedRegexes;\n    },\n    has: function (str1, str2) {\n      return typeof str1 === STR_TYPE ? str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1 : false;\n    },\n    lowerize: function (str) {\n      return str.toLowerCase();\n    },\n    major: function (version) {\n      return typeof version === STR_TYPE ? version.replace(/[^\\d\\.]/g, '').split(\".\")[0] : undefined;\n    },\n    trim: function (str, len) {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n      return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n    }\n  }; ///////////////\n  // Map helper\n  //////////////\n\n  var mapper = {\n    rgx: function (ua, arrays) {\n      var i = 0,\n          j,\n          k,\n          p,\n          q,\n          matches,\n          match; // loop through all regexes maps\n\n      while (i < arrays.length && !matches) {\n        var regex = arrays[i],\n            // even sequence (0,2,4,..)\n        props = arrays[i + 1]; // odd sequence (1,3,5,..)\n\n        j = k = 0; // try matching uastring with regexes\n\n        while (j < regex.length && !matches) {\n          matches = regex[j++].exec(ua);\n\n          if (!!matches) {\n            for (p = 0; p < props.length; p++) {\n              match = matches[++k];\n              q = props[p]; // check if given property is actually array\n\n              if (typeof q === OBJ_TYPE && q.length > 0) {\n                if (q.length == 2) {\n                  if (typeof q[1] == FUNC_TYPE) {\n                    // assign modified match\n                    this[q[0]] = q[1].call(this, match);\n                  } else {\n                    // assign given value, ignore regex match\n                    this[q[0]] = q[1];\n                  }\n                } else if (q.length == 3) {\n                  // check whether function or regex\n                  if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                    // call function (usually string mapper)\n                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                  } else {\n                    // sanitize match using given regex\n                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                  }\n                } else if (q.length == 4) {\n                  this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                }\n              } else {\n                this[q] = match ? match : undefined;\n              }\n            }\n          }\n        }\n\n        i += 2;\n      }\n    },\n    str: function (str, map) {\n      for (var i in map) {\n        // check if array\n        if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n          for (var j = 0; j < map[i].length; j++) {\n            if (util.has(map[i][j], str)) {\n              return i === UNKNOWN ? undefined : i;\n            }\n          }\n        } else if (util.has(map[i], str)) {\n          return i === UNKNOWN ? undefined : i;\n        }\n      }\n\n      return str;\n    }\n  }; ///////////////\n  // String map\n  //////////////\n\n  var maps = {\n    browser: {\n      // Safari < 3.0\n      oldSafari: {\n        version: {\n          '1.0': '/8',\n          '1.2': '/1',\n          '1.3': '/3',\n          '2.0': '/412',\n          '2.0.2': '/416',\n          '2.0.3': '/417',\n          '2.0.4': '/419',\n          '?': '/'\n        }\n      },\n      oldEdge: {\n        version: {\n          '0.1': '12.',\n          '21': '13.',\n          '31': '14.',\n          '39': '15.',\n          '41': '16.',\n          '42': '17.',\n          '44': '18.'\n        }\n      }\n    },\n    os: {\n      windows: {\n        version: {\n          'ME': '4.90',\n          'NT 3.11': 'NT3.51',\n          'NT 4.0': 'NT4.0',\n          '2000': 'NT 5.0',\n          'XP': ['NT 5.1', 'NT 5.2'],\n          'Vista': 'NT 6.0',\n          '7': 'NT 6.1',\n          '8': 'NT 6.2',\n          '8.1': 'NT 6.3',\n          '10': ['NT 6.4', 'NT 10.0'],\n          'RT': 'ARM'\n        }\n      }\n    }\n  }; //////////////\n  // Regex map\n  /////////////\n\n  var regexes = {\n    browser: [[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i // Chrome for Android/iOS\n    ], [VERSION, [NAME, 'Chrome']], [/edg(?:e|ios|a)?\\/([\\w\\.]+)/i // Microsoft Edge\n    ], [VERSION, [NAME, 'Edge']], [// breaking change (reserved for next major release):\n    ///edge\\/([\\w\\.]+)/i                                                  // Old Edge (Trident)\n    //], [[VERSION, mapper.str, maps.browser.oldEdge.version], [NAME, 'Edge']], [\n    // Presto based\n    /(opera\\smini)\\/([\\w\\.-]+)/i, // Opera Mini\n    /(opera\\s[mobiletab]{3,6})\\b.+version\\/([\\w\\.-]+)/i, // Opera Mobi/Tablet\n    /(opera)(?:.+version\\/|[\\/\\s]+)([\\w\\.]+)/i // Opera\n    ], [NAME, VERSION], [/opios[\\/\\s]+([\\w\\.]+)/i // Opera mini on iphone >= 8.0\n    ], [VERSION, [NAME, 'Opera Mini']], [/\\sopr\\/([\\w\\.]+)/i // Opera Webkit\n    ], [VERSION, [NAME, 'Opera']], [// Mixed\n    /(kindle)\\/([\\w\\.]+)/i, // Kindle\n    /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i, // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n    // Trident based\n    /(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i, // Avant/IEMobile/SlimBrowser\n    /(ba?idubrowser)[\\/\\s]?([\\w\\.]+)/i, // Baidu Browser\n    /(?:ms|\\()(ie)\\s([\\w\\.]+)/i, // Internet Explorer\n    // Webkit/KHTML based\n    /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i, // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n    /(rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([\\w\\.]+)/i, // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n    /(weibo)__([\\d\\.]+)/i // Weibo\n    ], [NAME, VERSION], [/(?:[\\s\\/]uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i // UCBrowser\n    ], [VERSION, [NAME, 'UCBrowser']], [/(?:windowswechat)?\\sqbcore\\/([\\w\\.]+)\\b.*(?:windowswechat)?/i // WeChat Desktop for Windows Built-in Browser\n    ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [/micromessenger\\/([\\w\\.]+)/i // WeChat\n    ], [VERSION, [NAME, 'WeChat']], [/konqueror\\/([\\w\\.]+)/i // Konqueror\n    ], [VERSION, [NAME, 'Konqueror']], [/trident.+rv[:\\s]([\\w\\.]{1,9})\\b.+like\\sgecko/i // IE11\n    ], [VERSION, [NAME, 'IE']], [/yabrowser\\/([\\w\\.]+)/i // Yandex\n    ], [VERSION, [NAME, 'Yandex']], [/(avast|avg)\\/([\\w\\.]+)/i // Avast/AVG Secure Browser\n    ], [[NAME, /(.+)/, '$1 Secure Browser'], VERSION], [/focus\\/([\\w\\.]+)/i // Firefox Focus\n    ], [VERSION, [NAME, 'Firefox Focus']], [/opt\\/([\\w\\.]+)/i // Opera Touch\n    ], [VERSION, [NAME, 'Opera Touch']], [/coc_coc_browser\\/([\\w\\.]+)/i // Coc Coc Browser\n    ], [VERSION, [NAME, 'Coc Coc']], [/dolfin\\/([\\w\\.]+)/i // Dolphin\n    ], [VERSION, [NAME, 'Dolphin']], [/coast\\/([\\w\\.]+)/i // Opera Coast\n    ], [VERSION, [NAME, 'Opera Coast']], [/xiaomi\\/miuibrowser\\/([\\w\\.]+)/i // MIUI Browser\n    ], [VERSION, [NAME, 'MIUI Browser']], [/fxios\\/([\\w\\.-]+)/i // Firefox for iOS\n    ], [VERSION, [NAME, 'Firefox']], [/(qihu|qhbrowser|qihoobrowser|360browser)/i // 360\n    ], [[NAME, '360 Browser']], [/(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i], [[NAME, /(.+)/, '$1 Browser'], VERSION], [// Oculus/Samsung/Sailfish Browser\n    /(comodo_dragon)\\/([\\w\\.]+)/i // Comodo Dragon\n    ], [[NAME, /_/g, ' '], VERSION], [/\\s(electron)\\/([\\w\\.]+)\\ssafari/i, // Electron-based App\n    /(tesla)(?:\\sqtcarbrowser|\\/(20[12]\\d\\.[\\w\\.-]+))/i, // Tesla\n    /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/\\s]?([\\w\\.]+)/i // QQBrowser/Baidu App/2345 Browser\n    ], [NAME, VERSION], [/(MetaSr)[\\/\\s]?([\\w\\.]+)/i, // SouGouBrowser\n    /(LBBROWSER)/i // LieBao Browser\n    ], [NAME], [// WebView\n    /;fbav\\/([\\w\\.]+);/i // Facebook App for iOS & Android with version\n    ], [VERSION, [NAME, 'Facebook']], [/FBAN\\/FBIOS|FB_IAB\\/FB4A/i // Facebook App for iOS & Android without version\n    ], [[NAME, 'Facebook']], [/safari\\s(line)\\/([\\w\\.]+)/i, // Line App for iOS\n    /\\b(line)\\/([\\w\\.]+)\\/iab/i, // Line App for Android\n    /(chromium|instagram)[\\/\\s]([\\w\\.-]+)/i // Chromium/Instagram\n    ], [NAME, VERSION], [/\\bgsa\\/([\\w\\.]+)\\s.*safari\\//i // Google Search Appliance on iOS\n    ], [VERSION, [NAME, 'GSA']], [/headlesschrome(?:\\/([\\w\\.]+)|\\s)/i // Chrome Headless\n    ], [VERSION, [NAME, 'Chrome Headless']], [/\\swv\\).+(chrome)\\/([\\w\\.]+)/i // Chrome WebView\n    ], [[NAME, 'Chrome WebView'], VERSION], [/droid.+\\sversion\\/([\\w\\.]+)\\b.+(?:mobile\\ssafari|safari)/i // Android Browser\n    ], [VERSION, [NAME, 'Android Browser']], [/(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia\n    ], [NAME, VERSION], [/version\\/([\\w\\.]+)\\s.*mobile\\/\\w+\\s(safari)/i // Mobile Safari\n    ], [VERSION, [NAME, 'Mobile Safari']], [/version\\/([\\w\\.]+)\\s.*(mobile\\s?safari|safari)/i // Safari & Safari Mobile\n    ], [VERSION, NAME], [/webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i // Safari < 3.0\n    ], [NAME, [VERSION, mapper.str, maps.browser.oldSafari.version]], [/(webkit|khtml)\\/([\\w\\.]+)/i], [NAME, VERSION], [// Gecko based\n    /(navigator|netscape)\\/([\\w\\.-]+)/i // Netscape\n    ], [[NAME, 'Netscape'], VERSION], [/ile\\svr;\\srv:([\\w\\.]+)\\).+firefox/i // Firefox Reality\n    ], [VERSION, [NAME, 'Firefox Reality']], [/ekiohf.+(flow)\\/([\\w\\.]+)/i, // Flow\n    /(swiftfox)/i, // Swiftfox\n    /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i, // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n    /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i, // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n    /(firefox)\\/([\\w\\.]+)\\s[\\w\\s\\-]+\\/[\\w\\.]+$/i, // Other Firefox-based\n    /(mozilla)\\/([\\w\\.]+)\\s.+rv\\:.+gecko\\/\\d+/i, // Mozilla\n    // Other\n    /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i, // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n    /(links)\\s\\(([\\w\\.]+)/i, // Links\n    /(gobrowser)\\/?([\\w\\.]*)/i, // GoBrowser\n    /(ice\\s?browser)\\/v?([\\w\\._]+)/i, // ICE Browser\n    /(mosaic)[\\/\\s]([\\w\\.]+)/i // Mosaic\n    ], [NAME, VERSION]],\n    cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i // AMD64 (x64)\n    ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i // IA32 (quicktime)\n    ], [[ARCHITECTURE, util.lowerize]], [/((?:i[346]|x)86)[;\\)]/i // IA32 (x86)\n    ], [[ARCHITECTURE, 'ia32']], [/\\b(aarch64|armv?8e?l?)\\b/i // ARM64\n    ], [[ARCHITECTURE, 'arm64']], [/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i // ARMHF\n    ], [[ARCHITECTURE, 'armhf']], [// PocketPC mistakenly identified as PowerPC\n    /windows\\s(ce|mobile);\\sppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i // PowerPC\n    ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [/(sun4\\w)[;\\)]/i // SPARC\n    ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n    ], [[ARCHITECTURE, util.lowerize]]],\n    device: [[//////////////////////////\n    // MOBILES & TABLETS\n    // Ordered by popularity\n    /////////////////////////\n    // Samsung\n    /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus\\s10)/i], [MODEL, [VENDOR, 'Samsung'], [TYPE, TABLET]], [/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy\\snexus)/i, /\\ssamsung[\\s-]([\\w-]+)/i, /sec-(sgh\\w+)/i], [MODEL, [VENDOR, 'Samsung'], [TYPE, MOBILE]], [// Apple\n    /\\((ip(?:hone|od)[\\s\\w]*);/i // iPod/iPhone\n    ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [/\\((ipad);[\\w\\s\\),;-]+apple/i, // iPad\n    /applecoremedia\\/[\\w\\.]+\\s\\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [// Huawei\n    /\\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\\d{2})/i], [MODEL, [VENDOR, 'Huawei'], [TYPE, TABLET]], [/d\\/huawei([\\w\\s-]+)[;\\)]/i, /\\b(nexus\\s6p|vog-[at]?l\\d\\d|ane-[at]?l[x\\d]\\d|eml-a?l\\d\\da?|lya-[at]?l\\d[\\dc]|clt-a?l\\d\\di?|ele-l\\d\\d)/i, /\\b(\\w{2,4}-[atu][ln][01259][019])[;\\)\\s]/i], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [// Xiaomi\n    /\\b(poco[\\s\\w]+)(?:\\sbuild|\\))/i, // Xiaomi POCO\n    /\\b;\\s(\\w+)\\sbuild\\/hm\\1/i, // Xiaomi Hongmi 'numeric' models\n    /\\b(hm[\\s\\-_]?note?[\\s_]?(?:\\d\\w)?)\\sbuild/i, // Xiaomi Hongmi\n    /\\b(redmi[\\s\\-_]?(?:note|k)?[\\w\\s_]+)(?:\\sbuild|\\))/i, // Xiaomi Redmi\n    /\\b(mi[\\s\\-_]?(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]?(?:\\d?\\w?)[\\s_]?(?:plus)?)\\sbuild/i // Xiaomi Mi\n    ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [/\\b(mi[\\s\\-_]?(?:pad)(?:[\\w\\s_]+))(?:\\sbuild|\\))/i // Mi Pad tablets\n    ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [// OPPO\n    /;\\s(\\w+)\\sbuild.+\\soppo/i, /\\s(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007)\\b/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [// Vivo\n    /\\svivo\\s(\\w+)(?:\\sbuild|\\))/i, /\\s(v[12]\\d{3}\\w?[at])(?:\\sbuild|;)/i], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [// Realme\n    /\\s(rmx[12]\\d{3})(?:\\sbuild|;)/i], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [// Motorola\n    /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)\\b[\\w\\s]+build\\//i, /\\smot(?:orola)?[\\s-](\\w*)/i, /((?:moto[\\s\\w\\(\\)]+|xt\\d{3,4}|nexus\\s6)(?=\\sbuild|\\)))/i], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [/\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [// LG\n    /((?=lg)?[vl]k\\-?\\d{3})\\sbuild|\\s3\\.[\\s\\w;-]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [/(lm-?f100[nv]?|nexus\\s[45])/i, /lg[e;\\s\\/-]+((?!browser|netcast)\\w+)/i, /\\blg(\\-?[\\d\\w]+)\\sbuild/i], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [// Lenovo\n    /(ideatab[\\w\\-\\s]+)/i, /lenovo\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+)|yt[\\d\\w-]{6}|tb[\\d\\w-]{6})/i // Lenovo tablets\n    ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [// Nokia\n    /(?:maemo|nokia).*(n900|lumia\\s\\d+)/i, /nokia[\\s_-]?([\\w\\.-]*)/i], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [// Google\n    /droid.+;\\s(pixel\\sc)[\\s)]/i // Google Pixel C\n    ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [/droid.+;\\s(pixel[\\s\\daxl]{0,6})(?:\\sbuild|\\))/i // Google Pixel\n    ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [// Sony\n    /droid.+\\s([c-g]\\d{4}|so[-l]\\w+|xq-a\\w[4-7][12])(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [/sony\\stablet\\s[ps]\\sbuild\\//i, /(?:sony)?sgp\\w+(?:\\sbuild\\/|\\))/i], [[MODEL, 'Xperia Tablet'], [VENDOR, 'Sony'], [TYPE, TABLET]], [// OnePlus\n    /\\s(kb2005|in20[12]5|be20[12][59])\\b/i, /\\ba000(1)\\sbuild/i, // OnePlus\n    /\\boneplus\\s(a\\d{4})[\\s)]/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [// Amazon\n    /(alexa)webm/i, /(kf[a-z]{2}wi)(\\sbuild\\/|\\))/i, // Kindle Fire without Silk\n    /(kf[a-z]+)(\\sbuild\\/|\\)).+silk\\//i // Kindle Fire HD\n    ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [/(sd|kf)[0349hijorstuw]+(\\sbuild\\/|\\)).+silk\\//i // Fire Phone\n    ], [[MODEL, 'Fire Phone'], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [// BlackBerry\n    /\\((playbook);[\\w\\s\\),;-]+(rim)/i // BlackBerry PlayBook\n    ], [MODEL, VENDOR, [TYPE, TABLET]], [/((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10;\\s(\\w+)/i // BlackBerry 10\n    ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [// Asus\n    /(?:\\b|asus_)(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus\\s7|padfone|p00[cj])/i], [MODEL, [VENDOR, 'ASUS'], [TYPE, TABLET]], [/\\s(z[es]6[027][01][km][ls]|zenfone\\s\\d\\w?)\\b/i], [MODEL, [VENDOR, 'ASUS'], [TYPE, MOBILE]], [// HTC\n    /(nexus\\s9)/i // HTC Nexus 9\n    ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/(htc)[;_\\s-]{1,2}([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i, // HTC\n    // ZTE\n    /(zte)-(\\w*)/i, /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n    ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [// Acer\n    /droid[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [// Meizu\n    /droid.+;\\s(m[1-5]\\snote)\\sbuild/i, /\\bmz-([\\w-]{2,})/i], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [// MIXED\n    /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i, // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n    /(hp)\\s([\\w\\s]+\\w)/i, // HP iPAQ\n    /(asus)-?(\\w+)/i, // Asus\n    /(microsoft);\\s(lumia[\\s\\w]+)/i, // Microsoft Lumia\n    /(lenovo)[_\\s-]?([\\w-]+)/i, // Lenovo\n    /linux;.+(jolla);/i, // Jolla\n    /droid.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i // OPPO\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(archos)\\s(gamepad2?)/i, // Archos\n    /(hp).+(touchpad(?!.+tablet)|tablet)/i, // HP TouchPad\n    /(kindle)\\/([\\w\\.]+)/i, // Kindle\n    /\\s(nook)[\\w\\s]+build\\/(\\w+)/i, // Nook\n    /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i, // Dell Streak\n    /[;\\/]\\s?(le[\\s\\-]+pan)[\\s\\-]+(\\w{1,9})\\sbuild/i, // Le Pan Tablets\n    /[;\\/]\\s?(trinity)[\\-\\s]*(t\\d{3})\\sbuild/i, // Trinity Tablets\n    /\\b(gigaset)[\\s\\-]+(q\\w{1,9})\\sbuild/i, // Gigaset Tablets\n    /\\b(vodafone)\\s([\\w\\s]+)(?:\\)|\\sbuild)/i // Vodafone\n    ], [VENDOR, MODEL, [TYPE, TABLET]], [/\\s(surface\\sduo)\\s/i // Surface Duo\n    ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, TABLET]], [/droid\\s[\\d\\.]+;\\s(fp\\du?)\\sbuild/i], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [/\\s(u304aa)\\sbuild/i // AT&T\n    ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [/sie-(\\w*)/i // Siemens\n    ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/[;\\/]\\s?(rct\\w+)\\sbuild/i // RCA Tablets\n    ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/[;\\/\\s](venue[\\d\\s]{2,7})\\sbuild/i // Dell Venue Tablets\n    ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/[;\\/]\\s?(q(?:mv|ta)\\w+)\\sbuild/i // Verizon Tablet\n    ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/[;\\/]\\s(?:barnes[&\\s]+noble\\s|bn[rt])([\\w\\s\\+]*)\\sbuild/i // Barnes & Noble Tablet\n    ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [/[;\\/]\\s(tm\\d{3}\\w+)\\sbuild/i], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/;\\s(k88)\\sbuild/i // ZTE K Series Tablet\n    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/;\\s(nx\\d{3}j)\\sbuild/i // ZTE Nubia\n    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [/[;\\/]\\s?(gen\\d{3})\\sbuild.*49h/i // Swiss GEN Mobile\n    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/[;\\/]\\s?(zur\\d{3})\\sbuild/i // Swiss ZUR Tablet\n    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/[;\\/]\\s?((zeki)?tb.*\\b)\\sbuild/i // Zeki Tablets\n    ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/[;\\/]\\s([yr]\\d{2})\\sbuild/i, /[;\\/]\\s(dragon[\\-\\s]+touch\\s|dt)(\\w{5})\\sbuild/i // Dragon Touch Tablet\n    ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/[;\\/]\\s?(ns-?\\w{0,9})\\sbuild/i // Insignia Tablets\n    ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/[;\\/]\\s?((nxa|Next)-?\\w{0,9})\\sbuild/i // NextBook Tablets\n    ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/[;\\/]\\s?(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05]))\\sbuild/i], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [// Voice Xtreme Phones\n    /[;\\/]\\s?(lvtel\\-)?(v1[12])\\sbuild/i // LvTel Phones\n    ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/;\\s(ph-1)\\s/i], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [// Essential PH-1\n    /[;\\/]\\s?(v(100md|700na|7011|917g).*\\b)\\sbuild/i // Envizen Tablets\n    ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/[;\\/]\\s?(trio[\\s\\w\\-\\.]+)\\sbuild/i // MachSpeed Tablets\n    ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/[;\\/]\\s?tu_(1491)\\sbuild/i // Rotor Tablets\n    ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/(shield[\\w\\s]+)\\sbuild/i // Nvidia Shield Tablets\n    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [/(sprint)\\s(\\w+)/i // Sprint Phones\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\\.[onetw]{3})/i // Microsoft Kin\n    ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [/droid\\s[\\d\\.]+;\\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i // Zebra\n    ], [MODEL, [VENDOR, 'Zebra'], [TYPE, TABLET]], [/droid\\s[\\d\\.]+;\\s(ec30|ps20|tc[2-8]\\d[kx])\\)/i], [MODEL, [VENDOR, 'Zebra'], [TYPE, MOBILE]], [///////////////////\n    // CONSOLES\n    ///////////////////\n    /\\s(ouya)\\s/i, // Ouya\n    /(nintendo)\\s([wids3utch]+)/i // Nintendo\n    ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+;\\s(shield)\\sbuild/i // Nvidia\n    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation\\s[345portablevi]+)/i // Playstation\n    ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [/[\\s\\(;](xbox(?:\\sone)?(?!;\\sxbox))[\\s\\);]/i // Microsoft Xbox\n    ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [///////////////////\n    // SMARTTVS\n    ///////////////////\n    /smart-tv.+(samsung)/i // Samsung\n    ], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [/(?:linux;\\snetcast.+smarttv|lg\\snetcast\\.tv-201\\d)/i // LG SmartTV\n    ], [[VENDOR, 'LG'], [TYPE, SMARTTV]], [/(apple)\\s?tv/i // Apple TV\n    ], [VENDOR, [MODEL, 'Apple TV'], [TYPE, SMARTTV]], [/crkey/i // Google Chromecast\n    ], [[MODEL, 'Chromecast'], [VENDOR, 'Google'], [TYPE, SMARTTV]], [/droid.+aft([\\w])(\\sbuild\\/|\\))/i // Fire TV\n    ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [/\\(dtv[\\);].+(aquos)/i // Sharp\n    ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [/hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i // HbbTV devices\n    ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [/[\\s\\/\\(](android\\s|smart[-\\s]?|opera\\s)tv[;\\)\\s]/i // SmartTV from Unidentified Vendors\n    ], [[TYPE, SMARTTV]], [///////////////////\n    // WEARABLES\n    ///////////////////\n    /((pebble))app\\/[\\d\\.]+\\s/i // Pebble\n    ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/droid.+;\\s(glass)\\s\\d/i // Google Glass\n    ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [/droid\\s[\\d\\.]+;\\s(wt63?0{2,3})\\)/i], [MODEL, [VENDOR, 'Zebra'], [TYPE, WEARABLE]], [///////////////////\n    // EMBEDDED\n    ///////////////////\n    /(tesla)(?:\\sqtcarbrowser|\\/20[12]\\d\\.[\\w\\.-]+)/i // Tesla\n    ], [VENDOR, [TYPE, EMBEDDED]], [////////////////////\n    // MIXED (GENERIC)\n    ///////////////////\n    /droid .+?; ([^;]+?)(?: build|\\) applewebkit).+? mobile safari/i // Android Phones from Unidentified Vendors\n    ], [MODEL, [TYPE, MOBILE]], [/droid .+?;\\s([^;]+?)(?: build|\\) applewebkit).+?(?! mobile) safari/i // Android Tablets from Unidentified Vendors\n    ], [MODEL, [TYPE, TABLET]], [/\\s(tablet|tab)[;\\/]/i, // Unidentifiable Tablet\n    /\\s(mobile)(?:[;\\/]|\\ssafari)/i // Unidentifiable Mobile\n    ], [[TYPE, util.lowerize]], [/(android[\\w\\.\\s\\-]{0,9});.+build/i // Generic Android Device\n    ], [MODEL, [VENDOR, 'Generic']], [/(phone)/i], [[TYPE, MOBILE]]],\n    engine: [[/windows.+\\sedge\\/([\\w\\.]+)/i // EdgeHTML\n    ], [VERSION, [NAME, 'EdgeHTML']], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i // Blink\n    ], [VERSION, [NAME, 'Blink']], [/(presto)\\/([\\w\\.]+)/i, // Presto\n    /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n    /ekioh(flow)\\/([\\w\\.]+)/i, // Flow\n    /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i, // KHTML/Tasman/Links\n    /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i // iCab\n    ], [NAME, VERSION], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i // Gecko\n    ], [VERSION, NAME]],\n    os: [[// Windows\n    /microsoft\\s(windows)\\s(vista|xp)/i // Windows (iTunes)\n    ], [NAME, VERSION], [/(windows)\\snt\\s6\\.2;\\s(arm)/i, // Windows RT\n    /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i, // Windows Phone\n    /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)(?!.+xbox)/i], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [/(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [// iOS/macOS\n    /ip[honead]{2,4}\\b(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i, // iOS\n    /cfnetwork\\/.+darwin/i], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i, /(macintosh|mac(?=_powerpc)\\s)(?!.+haiku)/i // Mac OS\n    ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [// Mobile OSes                                                      // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS\n    /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i, /(blackberry)\\w*\\/([\\w\\.]*)/i, // Blackberry\n    /(tizen|kaios)[\\/\\s]([\\w\\.]+)/i, // Tizen/KaiOS\n    /\\((series40);/i // Series 40\n    ], [NAME, VERSION], [/\\(bb(10);/i // BlackBerry 10\n    ], [VERSION, [NAME, 'BlackBerry']], [/(?:symbian\\s?os|symbos|s60(?=;)|series60)[\\/\\s-]?([\\w\\.]*)/i // Symbian\n    ], [VERSION, [NAME, 'Symbian']], [/mozilla.+\\(mobile;.+gecko.+firefox/i // Firefox OS\n    ], [[NAME, 'Firefox OS']], [/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i // WebOS\n    ], [VERSION, [NAME, 'webOS']], [// Google Chromecast\n    /crkey\\/([\\d\\.]+)/i // Google Chromecast\n    ], [VERSION, [NAME, 'Chromecast']], [/(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i // Chromium OS\n    ], [[NAME, 'Chromium OS'], VERSION], [// Console\n    /(nintendo|playstation)\\s([wids345portablevuch]+)/i, // Nintendo/Playstation\n    /(xbox);\\s+xbox\\s([^\\);]+)/i, // Microsoft Xbox (360, One, X, S, Series X, Series S)\n    // GNU/Linux based\n    /(mint)[\\/\\s\\(\\)]?(\\w*)/i, // Mint\n    /(mageia|vectorlinux)[;\\s]/i, // Mageia/VectorLinux\n    /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\\sgnu\\/linux)?(?:\\slinux)?[\\/\\s-]?(?!chrom|package)([\\w\\.-]*)/i, // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n    // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n    /(hurd|linux)\\s?([\\w\\.]*)/i, // Hurd/Linux\n    /(gnu)\\s?([\\w\\.]*)/i, // GNU\n    // BSD based\n    /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n    /(haiku)\\s(\\w+)/i // Haiku\n    ], [NAME, VERSION], [// Other\n    /(sunos)\\s?([\\w\\.\\d]*)/i // Solaris\n    ], [[NAME, 'Solaris'], VERSION], [/((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i, // Solaris\n    /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i, // AIX\n    /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i, // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia\n    /(unix)\\s?([\\w\\.]*)/i // UNIX\n    ], [NAME, VERSION]]\n  }; /////////////////\n  // Constructor\n  ////////////////\n\n  var UAParser = function (ua, extensions) {\n    if (typeof ua === 'object') {\n      extensions = ua;\n      ua = undefined;\n    }\n\n    if (!(this instanceof UAParser)) {\n      return new UAParser(ua, extensions).getResult();\n    }\n\n    var _ua = ua || (typeof window !== 'undefined' && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : EMPTY);\n\n    var _rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n    this.getBrowser = function () {\n      var _browser = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_browser, _ua, _rgxmap.browser);\n      _browser.major = util.major(_browser.version); // deprecated\n\n      return _browser;\n    };\n\n    this.getCPU = function () {\n      var _cpu = {\n        architecture: undefined\n      };\n      mapper.rgx.call(_cpu, _ua, _rgxmap.cpu);\n      return _cpu;\n    };\n\n    this.getDevice = function () {\n      var _device = {\n        vendor: undefined,\n        model: undefined,\n        type: undefined\n      };\n      mapper.rgx.call(_device, _ua, _rgxmap.device);\n      return _device;\n    };\n\n    this.getEngine = function () {\n      var _engine = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_engine, _ua, _rgxmap.engine);\n      return _engine;\n    };\n\n    this.getOS = function () {\n      var _os = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_os, _ua, _rgxmap.os);\n      return _os;\n    };\n\n    this.getResult = function () {\n      return {\n        ua: this.getUA(),\n        browser: this.getBrowser(),\n        engine: this.getEngine(),\n        os: this.getOS(),\n        device: this.getDevice(),\n        cpu: this.getCPU()\n      };\n    };\n\n    this.getUA = function () {\n      return _ua;\n    };\n\n    this.setUA = function (ua) {\n      _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? util.trim(ua, UA_MAX_LENGTH) : ua;\n      return this;\n    };\n\n    this.setUA(_ua);\n    return this;\n  };\n\n  UAParser.VERSION = LIBVERSION;\n  UAParser.BROWSER = {\n    NAME: NAME,\n    MAJOR: MAJOR,\n    // deprecated\n    VERSION: VERSION\n  };\n  UAParser.CPU = {\n    ARCHITECTURE: ARCHITECTURE\n  };\n  UAParser.DEVICE = {\n    MODEL: MODEL,\n    VENDOR: VENDOR,\n    TYPE: TYPE,\n    CONSOLE: CONSOLE,\n    MOBILE: MOBILE,\n    SMARTTV: SMARTTV,\n    TABLET: TABLET,\n    WEARABLE: WEARABLE,\n    EMBEDDED: EMBEDDED\n  };\n  UAParser.ENGINE = {\n    NAME: NAME,\n    VERSION: VERSION\n  };\n  UAParser.OS = {\n    NAME: NAME,\n    VERSION: VERSION\n  }; ///////////\n  // Export\n  //////////\n  // check js environment\n\n  if (typeof exports !== UNDEF_TYPE) {\n    // nodejs env\n    if (typeof module !== UNDEF_TYPE && module.exports) {\n      exports = module.exports = UAParser;\n    }\n\n    exports.UAParser = UAParser;\n  } else {\n    // requirejs env (optional)\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return UAParser;\n      });\n    } else if (typeof window !== 'undefined') {\n      // browser env\n      window.UAParser = UAParser;\n    }\n  } // jQuery/Zepto specific (optional)\n  // Note:\n  //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n  //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n  //   and we should catch that.\n\n\n  var $ = typeof window !== 'undefined' && (window.jQuery || window.Zepto);\n\n  if ($ && !$.ua) {\n    var parser = new UAParser();\n    $.ua = parser.getResult();\n\n    $.ua.get = function () {\n      return parser.getUA();\n    };\n\n    $.ua.set = function (uastring) {\n      parser.setUA(uastring);\n      var result = parser.getResult();\n\n      for (var prop in result) {\n        $.ua[prop] = result[prop];\n      }\n    };\n  }\n})(typeof window === 'object' ? window : this);","map":null,"metadata":{},"sourceType":"script"}