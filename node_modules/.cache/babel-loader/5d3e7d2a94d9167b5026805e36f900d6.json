{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\pages\\\\product\\\\pictures-wall.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { reqDeleteImg } from '../../api';\nimport { BASE_IMG_URL } from \"../../utils/constants\";\n/*\n用于图片上传的组件\n */\n\nexport default class PicturesWall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      // 标识是否显示大图预览Modal\n      previewImage: '',\n      // 大图的url\n      fileList: [\n        /*{\n          uid: '-1', // 每个file都有自己唯一的id\n          name: 'xxx.png', // 图片文件名\n          status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\n          url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\n        },*/\n      ]\n    };\n\n    this.getImgs = () => {\n      return this.state.fileList.map(file => file.name);\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = file => {\n      console.log('handlePreview()', file); // 显示指定file对应的大图\n\n      this.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = async ({\n      file,\n      fileList\n    }) => {\n      console.log('handleChange()', file.status, fileList.length, file === fileList[fileList.length - 1]); // 一旦上传成功, 将当前上传的file的信息修正(name, url)\n\n      if (file.status === 'done') {\n        const result = file.response; // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\n\n        if (result.status === 0) {\n          _message.success('上传图片成功!');\n\n          const {\n            name,\n            url\n          } = result.data;\n          file = fileList[fileList.length - 1];\n          file.name = name;\n          file.url = url;\n        } else {\n          _message.error('上传图片失败');\n        }\n      } else if (file.status === 'removed') {\n        // 删除图片\n        const result = await reqDeleteImg(file.name);\n\n        if (result.status === 0) {\n          _message.success('删除图片成功!');\n        } else {\n          _message.error('删除图片失败!');\n        }\n      } // 在操作(上传/删除)过程中更新fileList状态\n\n\n      this.setState({\n        fileList\n      });\n    };\n\n    let _fileList = []; // 如果传入了imgs属性\n\n    const {\n      imgs\n    } = this.props;\n\n    if (imgs && imgs.length > 0) {\n      _fileList = imgs.map((img, index) => ({\n        uid: -index,\n        // 每个file都有自己唯一的id\n        name: img,\n        // 图片文件名\n        status: 'done',\n        // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\n        url: BASE_IMG_URL + img\n      }));\n    } // 初始化状态\n\n\n    this.state = {\n      previewVisible: false,\n      // 标识是否显示大图预览Modal\n      previewImage: '',\n      // 大图的url\n      fileList: _fileList // 所有已上传图片的数组\n\n    };\n  }\n  /*\n  获取所有已上传图片文件名的数组\n   */\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Upload\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Upload, {\n      action: \"/manage/img/upload\"\n      /*上传图片的接口地址*/\n      ,\n      accept: \"image/*\"\n      /*只接收图片格式*/\n      ,\n      name: \"image\"\n      /*请求参数名*/\n      ,\n      listType: \"picture-card\"\n      /*卡片样式*/\n      ,\n      fileList: fileList\n      /*所有已上传图片文件对象的数组*/\n      ,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, fileList.length >= 4 ? null : uploadButton), /*#__PURE__*/React.createElement(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nPicturesWall.propTypes = {\n  imgs: PropTypes.array\n};","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/pages/product/pictures-wall.jsx"],"names":["React","PropTypes","reqDeleteImg","BASE_IMG_URL","PicturesWall","Component","constructor","props","state","previewVisible","previewImage","fileList","getImgs","map","file","name","handleCancel","setState","handlePreview","console","log","url","thumbUrl","handleChange","status","length","result","response","success","data","error","imgs","img","index","uid","render","uploadButton","width","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Upload, Icon, Modal, message } from 'antd'\nimport {reqDeleteImg} from '../../api'\nimport {BASE_IMG_URL} from \"../../utils/constants\";\n/*\n用于图片上传的组件\n */\nexport default class PicturesWall extends React.Component {\n\n  static propTypes = {\n    imgs: PropTypes.array\n  }\n\n  state = {\n    previewVisible: false, // 标识是否显示大图预览Modal\n    previewImage: '', // 大图的url\n    fileList: [\n      /*{\n        uid: '-1', // 每个file都有自己唯一的id\n        name: 'xxx.png', // 图片文件名\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\n      },*/\n    ],\n  }\n\n  constructor (props) {\n    super(props)\n\n    let fileList = []\n\n    // 如果传入了imgs属性\n    const {imgs} = this.props\n    if (imgs && imgs.length>0) {\n      fileList = imgs.map((img, index) => ({\n        uid: -index, // 每个file都有自己唯一的id\n        name: img, // 图片文件名\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\n        url: BASE_IMG_URL + img\n      }))\n    }\n\n    // 初始化状态\n    this.state = {\n      previewVisible: false, // 标识是否显示大图预览Modal\n      previewImage: '', // 大图的url\n      fileList // 所有已上传图片的数组\n    }\n  }\n\n  /*\n  获取所有已上传图片文件名的数组\n   */\n  getImgs  = () => {\n    return this.state.fileList.map(file => file.name)\n  }\n\n  /*\n  隐藏Modal\n   */\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = file => {\n    console.log('handlePreview()', file)\n    // 显示指定file对应的大图\n    this.setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n\n  /*\n  file: 当前操作的图片文件(上传/删除)\n  fileList: 所有已上传图片文件对象的数组\n   */\n  handleChange = async ({ file, fileList }) => {\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\n\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\n    if(file.status==='done') {\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\n      if(result.status===0) {\n        message.success('上传图片成功!')\n        const {name, url} = result.data\n        file = fileList[fileList.length-1]\n        file.name = name\n        file.url = url\n      } else {\n        message.error('上传图片失败')\n      }\n    } else if (file.status==='removed') { // 删除图片\n      const result = await reqDeleteImg(file.name)\n      if (result.status===0) {\n        message.success('删除图片成功!')\n      } else {\n        message.error('删除图片失败!')\n      }\n    }\n\n    // 在操作(上传/删除)过程中更新fileList状态\n    this.setState({ fileList })\n  };\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div>Upload</div>\n      </div>\n    );\n    return (\n      <div>\n        <Upload\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\n          accept='image/*'  /*只接收图片格式*/\n          name='image' /*请求参数名*/\n          listType=\"picture-card\"  /*卡片样式*/\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 4 ? null : uploadButton}\n        </Upload>\n\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}