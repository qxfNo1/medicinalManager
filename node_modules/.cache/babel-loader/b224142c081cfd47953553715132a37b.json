{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"D:\\\\studyFiles\\\\\\u524D\\u7AEF\\\\react-guli\\\\code\\\\admin-client_final\\\\src\\\\pages\\\\product\\\\home.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button';\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api';\nimport { PAGE_SIZE } from '../../utils/constants';\nconst Option = _Select.Option;\n/*\nProduct的默认子路由组件\n */\n\nexport default class ProductHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      total: 0,\n      // 商品的总数量\n      products: [],\n      // 商品的数组\n      loading: false,\n      // 是否正在加载中\n      searchName: '',\n      // 搜索的关键字\n      searchType: 'productName' // 根据哪个字段搜索\n\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '商品名称',\n        dataIndex: 'name'\n      }, {\n        title: '商品描述',\n        dataIndex: 'desc'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        render: price => '¥' + price // 当前指定了对应的属性, 传入的是对应的属性值\n\n      }, {\n        width: 100,\n        title: '状态',\n        // dataIndex: 'status',\n        render: product => {\n          const {\n            status,\n            _id\n          } = product;\n          const newStatus = status === 1 ? 2 : 1;\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(_Button, {\n            type: \"primary\",\n            onClick: () => this.updateStatus(_id, newStatus),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }\n          }, status === 1 ? '下架' : '上架'), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }\n          }, status === 1 ? '在售' : '已下架'));\n        }\n      }, {\n        width: 100,\n        title: '操作',\n        render: product => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(LinkButton, {\n            onClick: () => this.props.history.push('/product/detail', {\n              product\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, \"\\u8BE6\\u60C5\"), /*#__PURE__*/React.createElement(LinkButton, {\n            onClick: () => this.props.history.push('/product/addupdate', product),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }, \"\\u4FEE\\u6539\"));\n        }\n      }];\n    };\n\n    this.getProducts = async pageNum => {\n      this.pageNum = pageNum; // 保存pageNum, 让其它方法可以看到\n\n      this.setState({\n        loading: true\n      }); // 显示loading\n\n      const {\n        searchName,\n        searchType\n      } = this.state; // 如果搜索关键字有值, 说明我们要做搜索分页\n\n      let result;\n\n      if (searchName) {\n        result = await reqSearchProducts({\n          pageNum,\n          pageSize: PAGE_SIZE,\n          searchName,\n          searchType\n        });\n      } else {\n        // 一般分页请求\n        result = await reqProducts(pageNum, PAGE_SIZE);\n      }\n\n      this.setState({\n        loading: false\n      }); // 隐藏loading\n\n      if (result.status === 0) {\n        // 取出分页数据, 更新状态, 显示分页列表\n        const {\n          total,\n          list\n        } = result.data;\n        this.setState({\n          total,\n          products: list\n        });\n      }\n    };\n\n    this.updateStatus = async (productId, status) => {\n      const result = await reqUpdateStatus(productId, status);\n\n      if (result.status === 0) {\n        _message.success('更新商品成功');\n\n        this.getProducts(this.pageNum);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getProducts(1);\n  }\n\n  render() {\n    // 取出状态数据\n    const {\n      products,\n      total,\n      loading,\n      searchType,\n      searchName\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Select, {\n      value: searchType,\n      style: {\n        width: 150\n      },\n      onChange: value => this.setState({\n        searchType: value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"productName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"productDesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\")), /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"\\u5173\\u952E\\u5B57\",\n      style: {\n        width: 150,\n        margin: '0 15px'\n      },\n      value: searchName,\n      onChange: event => this.setState({\n        searchName: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => this.getProducts(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, \"\\u641C\\u7D22\"));\n    const extra = /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => this.props.history.push('/product/addupdate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), \"\\u6DFB\\u52A0\\u5546\\u54C1\");\n    return /*#__PURE__*/React.createElement(_Card, {\n      title: title,\n      extra: extra,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      loading: loading,\n      dataSource: products,\n      columns: this.columns,\n      pagination: {\n        current: this.pageNum,\n        total,\n        defaultPageSize: PAGE_SIZE,\n        showQuickJumper: true,\n        onChange: this.getProducts\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/studyFiles/前端/react-guli/code/admin-client_final/src/pages/product/home.jsx"],"names":["React","Component","LinkButton","reqProducts","reqSearchProducts","reqUpdateStatus","PAGE_SIZE","Option","ProductHome","state","total","products","loading","searchName","searchType","initColumns","columns","title","dataIndex","render","price","width","product","status","_id","newStatus","updateStatus","props","history","push","getProducts","pageNum","setState","result","pageSize","list","data","productId","success","componentWillMount","componentDidMount","value","margin","event","target","extra","current","defaultPageSize","showQuickJumper","onChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  Card,\n  Select,\n  Input,\n  Button,\n  Icon,\n  Table,\n  message\n} from 'antd'\n\nimport LinkButton from '../../components/link-button'\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\nimport {PAGE_SIZE} from '../../utils/constants'\n\nconst Option = Select.Option\n\n/*\nProduct的默认子路由组件\n */\nexport default class ProductHome extends Component {\n\n  state = {\n    total: 0, // 商品的总数量\n    products: [], // 商品的数组\n    loading: false, // 是否正在加载中\n    searchName: '', // 搜索的关键字\n    searchType: 'productName', // 根据哪个字段搜索\n  }\n\n  /*\n  初始化table的列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '商品名称',\n        dataIndex: 'name',\n      },\n      {\n        title: '商品描述',\n        dataIndex: 'desc',\n      },\n      {\n        title: '价格',\n        dataIndex: 'price',\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\n      },\n      {\n        width: 100,\n        title: '状态',\n        // dataIndex: 'status',\n        render: (product) => {\n          const {status, _id} = product\n          const newStatus = status===1 ? 2 : 1\n          return (\n            <span>\n              <Button\n                type='primary'\n                onClick={() => this.updateStatus(_id, newStatus)}\n              >\n                {status===1 ? '下架' : '上架'}\n              </Button>\n              <span>{status===1 ? '在售' : '已下架'}</span>\n            </span>\n          )\n        }\n      },\n      {\n        width: 100,\n        title: '操作',\n        render: (product) => {\n          return (\n            <span>\n              {/*将product对象使用state传递给目标路由组件*/}\n              <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>详情</LinkButton>\n              <LinkButton onClick={() => this.props.history.push('/product/addupdate', product)}>修改</LinkButton>\n            </span>\n          )\n        }\n      },\n    ];\n  }\n\n  /*\n  获取指定页码的列表数据显示\n   */\n  getProducts = async (pageNum) => {\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\n    this.setState({loading: true}) // 显示loading\n\n    const {searchName, searchType} = this.state\n    // 如果搜索关键字有值, 说明我们要做搜索分页\n    let result\n    if (searchName) {\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\n    } else { // 一般分页请求\n      result = await reqProducts(pageNum, PAGE_SIZE)\n    }\n\n    this.setState({loading: false}) // 隐藏loading\n    if (result.status === 0) {\n      // 取出分页数据, 更新状态, 显示分页列表\n      const {total, list} = result.data\n      this.setState({\n        total,\n        products: list\n      })\n    }\n  }\n\n  /*\n  更新指定商品的状态\n   */\n  updateStatus = async (productId, status) => {\n    const result = await reqUpdateStatus(productId, status)\n    if(result.status===0) {\n      message.success('更新商品成功')\n      this.getProducts(this.pageNum)\n    }\n  }\n\n  componentWillMount () {\n    this.initColumns()\n  }\n\n  componentDidMount () {\n    this.getProducts(1)\n  }\n\n  render() {\n\n    // 取出状态数据\n    const {products, total, loading, searchType, searchName} = this.state\n\n\n\n    const title = (\n      <span>\n        <Select\n          value= {searchType}\n          style={{width: 150}}\n          onChange={value => this.setState({searchType:value})}\n        >\n          <Option value='productName'>按名称搜索</Option>\n          <Option value='productDesc'>按描述搜索</Option>\n        </Select>\n        <Input\n          placeholder='关键字'\n          style={{width: 150, margin: '0 15px'}}\n          value={searchName}\n          onChange={event => this.setState({searchName:event.target.value})}\n        />\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\n      </span>\n    )\n\n    const extra = (\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\n        <Icon type='plus'/>\n        添加商品\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey='_id'\n          loading={loading}\n          dataSource={products}\n          columns={this.columns}\n          pagination={{\n            current: this.pageNum,\n            total,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            onChange: this.getProducts\n          }}\n        />\n      </Card>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}